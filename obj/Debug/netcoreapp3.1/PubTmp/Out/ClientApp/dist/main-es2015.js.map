{"version":3,"sources":["./src/app/app.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/modality/create/create.component.html","./src/app/modality/edit/edit.component.html","./src/app/modality/table/table.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/neighborhood/create/create.component.html","./src/app/neighborhood/edit/edit.component.html","./src/app/neighborhood/table/table.component.html","./src/app/student/create/create.component.html","./src/app/student/edit/edit.component.html","./src/app/student/table/table.component.html","./src/app/teacher/create/create.component.html","./src/app/teacher/edit/edit.component.html","./src/app/teacher/table/table.component.html","./src/app/user/create/create.component.html","./src/app/user/edit/edit.component.html","./src/app/user/table/table.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/login/login.component.ts","./src/app/modality/create/create.component.ts","./src/app/modality/edit/edit.component.ts","./src/app/modality/table/table.component.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/app/neighborhood/create/create.component.ts","./src/app/neighborhood/edit/edit.component.ts","./src/app/neighborhood/table/table.component.ts","./src/app/student/create/create.component.ts","./src/app/student/edit/edit.component.ts","./src/app/student/table/table.component.ts","./src/app/teacher/create/create.component.ts","./src/app/teacher/edit/edit.component.ts","./src/app/teacher/table/table.component.ts","./src/app/user/create/create.component.ts","./src/app/user/edit/edit.component.ts","./src/app/user/table/table.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"<body>\\r\\n  <router-outlet></router-outlet>\\r\\n</body>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1>Cruzeiro City Council</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-2 col-md-3 col-sm-4 col-xs-6 text-center dash-icon ng-scope\\\">\\r\\n    <a [routerLink]=\\\"['/students']\\\">\\r\\n      <img src=\\\"assets/images/manage-students.png\\\" width=\\\"128\\\" />\\r\\n      <div>Students</div>\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-2 col-md-3 col-sm-4 col-xs-6 text-center dash-icon ng-scope\\\">\\r\\n    <a [routerLink]=\\\"['/teachers']\\\">\\r\\n      <img src=\\\"assets/images/manage-teachers.png\\\" width=\\\"128\\\" />\\r\\n      <div>Teachers</div>\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-2 col-md-3 col-sm-4 col-xs-6 text-center dash-icon ng-scope\\\">\\r\\n    <a [routerLink]=\\\"['/neighborhoods']\\\">\\r\\n      <img src=\\\"assets/images/manage-neighborhood.png\\\" width=\\\"128\\\" />\\r\\n      <div>Neighborhoods</div>\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-2 col-md-3 col-sm-4 col-xs-6 text-center dash-icon ng-scope\\\">\\r\\n    <a [routerLink]=\\\"['/modalities']\\\">\\r\\n      <img src=\\\"assets/images/manage-classes.png\\\" width=\\\"128\\\" />\\r\\n      <div>Modalities</div>\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-2 col-md-3 col-sm-4 col-xs-6 text-center dash-icon ng-scope\\\">\\r\\n    <a [routerLink]=\\\"['/users']\\\">\\r\\n      <img src=\\\"assets/images/manage-users.png\\\" width=\\\"128\\\" />\\r\\n      <div>Users</div>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<header>\\r\\n  <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Sports Department</a>\\r\\n      <button class=\\\"navbar-toggler\\\"\\r\\n              type=\\\"button\\\"\\r\\n              data-toggle=\\\"collapse\\\"\\r\\n              data-target=\\\".navbar-collapse\\\"\\r\\n              aria-label=\\\"Toggle navigation\\\"\\r\\n              [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n              (click)=\\\"toggle()\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"navbar-collapse collapse d-sm-inline-flex justify-content-end\\\"\\r\\n           [ngClass]=\\\"{ show: isExpanded }\\\">\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n<form class=\\\"form-signin\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm)\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <h2 class=\\\"form-signin-heading\\\">Login</h2>\\r\\n    <div *ngIf=\\\"invalidLogin\\\" class=\\\"alert alert-danger\\\">Invalid username or password.</div>\\r\\n    <br />\\r\\n    <label for=\\\"username\\\" class=\\\"sr-only\\\">Email address</label>\\r\\n    <input type=\\\"email\\\" id=\\\"username\\\" name=\\\"email\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"User Name\\\" required autofocus>\\r\\n    <br />\\r\\n    <label for=\\\"password\\\" class=\\\"sr-only\\\">Password</label>\\r\\n    <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\r\\n    <br />\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Create Modality</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Name</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Teacher</td>\\r\\n          <td>\\r\\n            <select formControlName=\\\"TeacherId\\\">\\r\\n              <option *ngFor=\\\"let t of teachers\\\" [ngValue]=\\\"t.teacherId\\\">{{t.fullName}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.TeacherId.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.TeacherId.errors.required\\\">Teacher is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Edit Modality</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Name</td>\\r\\n          <td>\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"ID\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Teacher</td>\\r\\n          <td>\\r\\n            <select formControlName=\\\"TeacherId\\\">\\r\\n              <option *ngFor=\\\"let t of teachers\\\" [ngValue]=\\\"t.teacherId\\\">{{t.fullName}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.TeacherId.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.TeacherId.errors.required\\\">Teacher is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/modalities/create']\\\"><fa-icon [icon]=\\\"faPlus\\\"></fa-icon> Add</a>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <tr>\\r\\n        <td>Id</td>\\r\\n        <td>Modality</td>\\r\\n        <td>Teacher</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let d of data\\\">\\r\\n        <td>{{d.modalityId}}</td>\\r\\n        <td>{{d.name}}</td>\\r\\n        <td>{{d.teacher.fullName}}</td>\\r\\n        <td><a [routerLink]=\\\"['/modalities/'+d.modalityId]\\\" class=\\\"btn btn-warning\\\"><fa-icon [icon]=\\\"faEdit\\\"></fa-icon> Edit</a></td>\\r\\n        <td><a (click)=\\\"remove(d.modalityId, d.name)\\\" class=\\\"btn btn-danger\\\"><fa-icon [icon]=\\\"faTrash\\\"></fa-icon> Remove</a></td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Sports Department</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"navbar-collapse collapse d-sm-inline-flex justify-content-end\\\"\\r\\n           [ngClass]=\\\"{ show: isExpanded }\\\">\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\"\\r\\n              [routerLinkActive]=\\\"['link-active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" (click)=\\\"logOut()\\\">Logout</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Create new Neighborhood</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Name</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Edit Neighborhood</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Name</td>\\r\\n          <td>\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"ID\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/neighborhoods/create']\\\"><fa-icon [icon]=\\\"faPlus\\\"></fa-icon> Add</a>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <tr>\\r\\n        <td>Id</td>\\r\\n        <td>Neighborhood</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let d of data\\\">\\r\\n        <td>{{d.neighborhoodId}}</td>\\r\\n        <td>{{d.name}}</td>\\r\\n        <td><a [routerLink]=\\\"['/neighborhoods/'+d.neighborhoodId]\\\" class=\\\"btn btn-warning\\\"><fa-icon [icon]=\\\"faEdit\\\"></fa-icon> Edit</a></td>\\r\\n        <td><a (click)=\\\"remove(d.neighborhoodId, d.name)\\\" class=\\\"btn btn-danger\\\"><fa-icon [icon]=\\\"faTrash\\\"></fa-icon> Remove</a></td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Create new Student</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Name</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n        <tr>\\r\\n          <td>Surname</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Surname\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Surname.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Surname.errors.required\\\">Surname is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Modality</td>\\r\\n          <td>\\r\\n            <select formControlName=\\\"ModalityId\\\">\\r\\n              <option *ngFor=\\\"let m of modalities\\\" [ngValue]=\\\"m.modalityId\\\">{{m.name}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.ModalityId.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.ModalityId.errors.required\\\">Modality is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Neighborhood</td>\\r\\n          <td>\\r\\n            <select formControlName=\\\"NeighborhoodId\\\">\\r\\n              <option *ngFor=\\\"let n of neighborhoods\\\" [ngValue]=\\\"n.neighborhoodId\\\">{{n.name}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.NeighborhoodId.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.NeighborhoodId.errors.required\\\">Neighborhood is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Edit Student</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Nome</td>\\r\\n          <td>\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"ID\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n        <tr>\\r\\n          <td>Surname</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Surname\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Surname.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Surname.errors.required\\\">Surname is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Modality</td>\\r\\n          <td>\\r\\n            <select formControlName=\\\"ModalityId\\\">\\r\\n              <option *ngFor=\\\"let m of modalities\\\" [ngValue]=\\\"m.modalityId\\\">{{m.name}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.ModalityId.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.ModalityId.errors.required\\\">Modality is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Neighborhood</td>\\r\\n          <td>\\r\\n            <select formControlName=\\\"NeighborhoodId\\\">\\r\\n              <option *ngFor=\\\"let n of neighborhoods\\\" [ngValue]=\\\"n.neighborhoodId\\\">{{n.name}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.NeighborhoodId.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.NeighborhoodId.errors.required\\\">Neighborhood is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/students/create']\\\"><fa-icon [icon]=\\\"faPlus\\\"></fa-icon> Add</a>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <tr>\\r\\n        <td>Id</td>\\r\\n        <td>Name</td>\\r\\n        <td>Modality</td>\\r\\n        <td>Neighborhood</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let d of data\\\">\\r\\n        <td>{{d.studentId}}</td>\\r\\n        <td>{{d.fullName}}</td>\\r\\n        <td>{{d.modality.name}}</td>\\r\\n        <td>{{d.neighborhood.name}}</td>\\r\\n        <td><a [routerLink]=\\\"['/students/'+d.studentId]\\\" class=\\\"btn btn-warning\\\"><fa-icon [icon]=\\\"faEdit\\\"></fa-icon> Edit</a></td>\\r\\n        <td><a (click)=\\\"remove(d.studentId, d.fullName)\\\" class=\\\"btn btn-danger\\\"><fa-icon [icon]=\\\"faTrash\\\"></fa-icon> Remove</a></td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Create new Teacher</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Name</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Surname</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Surname\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Surname.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Surname.errors.required\\\">Surname is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Phone</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"PhoneNumber\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.PhoneNumber.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.PhoneNumber.errors.required\\\">Phone is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Edit Teacher</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Nome</td>\\r\\n          <td>\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"ID\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Sobrenome</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Surname\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Surname.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Surname.errors.required\\\">Surname is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Telefone</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"PhoneNumber\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.PhoneNumber.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.PhoneNumber.errors.required\\\">Phone is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/teachers/create']\\\"><fa-icon [icon]=\\\"faPlus\\\"></fa-icon> Add</a>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <tr>\\r\\n        <td>Id</td>\\r\\n        <td>Name</td>\\r\\n        <td>Phone</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let d of data\\\">\\r\\n        <td>{{d.teacherId}}</td>\\r\\n        <td>{{d.fullName}}</td>\\r\\n        <td>{{d.phoneNumber}}</td>\\r\\n        <td><a [routerLink]=\\\"['/teachers/'+d.teacherId]\\\" class=\\\"btn btn-warning\\\"><fa-icon [icon]=\\\"faEdit\\\"></fa-icon> Edit</a></td>\\r\\n        <td><a (click)=\\\"remove(d.teacherId, d.fullName)\\\" class=\\\"btn btn-danger\\\"><fa-icon [icon]=\\\"faTrash\\\"></fa-icon> Remove</a></td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Create new User</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Name</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Email</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Email\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Email.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Email.errors.required\\\">Email is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Password</td>\\r\\n          <td>\\r\\n            <input type=\\\"password\\\" formControlName=\\\"Password\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Password.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Password.errors.required\\\">Password is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"MyForm\\\" (ngSubmit)=\\\"this[EventValue]()\\\">\\r\\n\\r\\n    <h3>Edit User</h3>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td>Name</td>\\r\\n          <td>\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"ID\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Name.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Name.errors.required\\\">Name is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Email</td>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"Email\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Email.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Email.errors.required\\\">Email is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Password</td>\\r\\n          <td>\\r\\n            <input type=\\\"password\\\" formControlName=\\\"Password\\\">\\r\\n            <div *ngIf=\\\"submitted && MyForm.controls.Password.errors\\\" class=\\\"text-danger\\\">\\r\\n              <div *ngIf=\\\"MyForm.controls.Password.errors.required\\\">Password is required</div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/users/create']\\\"><fa-icon [icon]=\\\"faPlus\\\"></fa-icon> Add</a>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <tr>\\r\\n        <td>Name</td>\\r\\n        <td>Email</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let d of data\\\">\\r\\n        <td>{{d.name}}</td>\\r\\n        <td>{{d.email}}</td>\\r\\n        <td><a [routerLink]=\\\"['/users/'+d.id]\\\" class=\\\"btn btn-warning\\\"><fa-icon [icon]=\\\"faEdit\\\"></fa-icon> Edit</a></td>\\r\\n        <td><a (click)=\\\"remove(d.id, d.fullName)\\\" class=\\\"btn btn-danger\\\"><fa-icon [icon]=\\\"faTrash\\\"></fa-icon> Remove</a></td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { TeacherTableComponent } from './teacher/table/table.component';\r\nimport { TeacherCreateComponent } from './teacher/create/create.component';\r\nimport { TeacherEditComponent } from './teacher/edit/edit.component';\r\nimport { NeighborhoodTableComponent } from './neighborhood/table/table.component';\r\nimport { NeighborhoodCreateComponent } from './neighborhood/create/create.component';\r\nimport { NeighborhoodEditComponent } from './neighborhood/edit/edit.component';\r\nimport { ModalityTableComponent } from './modality/table/table.component';\r\nimport { ModalityCreateComponent } from './modality/create/create.component';\r\nimport { ModalityEditComponent } from './modality/edit/edit.component';\r\nimport { StudentTableComponent } from './student/table/table.component';\r\nimport { StudentCreateComponent } from './student/create/create.component';\r\nimport { StudentEditComponent } from './student/edit/edit.component';\r\nimport { UserTableComponent } from './user/table/table.component';\r\nimport { UserCreateComponent } from './user/create/create.component';\r\nimport { UserEditComponent } from './user/edit/edit.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    TeacherTableComponent,\r\n    TeacherCreateComponent,\r\n    TeacherEditComponent,\r\n    NeighborhoodTableComponent,\r\n    NeighborhoodCreateComponent,\r\n    NeighborhoodEditComponent,\r\n    ModalityTableComponent,\r\n    ModalityCreateComponent,\r\n    ModalityEditComponent,\r\n    StudentTableComponent,\r\n    StudentCreateComponent,\r\n    StudentEditComponent,\r\n    UserTableComponent,\r\n    UserCreateComponent,\r\n    UserEditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FontAwesomeModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'login', component: LoginComponent },\r\n      { path: 'teachers', component: TeacherTableComponent },\r\n      { path: 'teachers/create', component: TeacherCreateComponent },\r\n      { path: 'teachers/:ID', component: TeacherEditComponent },\r\n      { path: 'neighborhoods', component: NeighborhoodTableComponent },\r\n      { path: 'neighborhoods/create', component: NeighborhoodCreateComponent },\r\n      { path: 'neighborhoods/:ID', component: NeighborhoodEditComponent },\r\n      { path: 'modalities', component: ModalityTableComponent },\r\n      { path: 'modalities/create', component: ModalityCreateComponent },\r\n      { path: 'modalities/:ID', component: ModalityEditComponent },\r\n      { path: 'students', component: StudentTableComponent },\r\n      { path: 'students/create', component: StudentCreateComponent },\r\n      { path: 'students/:ID', component: StudentEditComponent },\r\n      { path: 'users', component: UserTableComponent },\r\n      { path: 'users/create', component: UserCreateComponent },\r\n      { path: 'users/:ID', component: UserEditComponent },\r\n    ]),\r\n    ToastrModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  token: any;\r\n  constructor(private router: Router) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html'\r\n})\r\n/** login component*/\r\nexport class LoginComponent {\r\n    invalidLogin: boolean;\r\n    /** login ctor */\r\n  constructor(private http: HttpClient, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n\r\n  }\r\n\r\n  login(form: NgForm) {\r\n    const credentials = JSON.stringify(form.value);\r\n    this.http.post(\"/api/auth/login\", credentials, {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    }).subscribe(response => {\r\n      const token = (<any>response).token;\r\n      localStorage.setItem(\"jwt\", token);\r\n      this.invalidLogin = false;\r\n      this.router.navigate([\"/\"]);\r\n    }, err => {\r\n      this.invalidLogin = true;\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-create',\r\n    templateUrl: './create.component.html'\r\n})\r\n/** create component*/\r\nexport class ModalityCreateComponent {\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  teacherId: any;\r\n  teachers: any;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n    /** create ctor */\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    this.getTeachers();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required]),\r\n      TeacherId: new FormControl(\"\", [Validators.required])\r\n    });\r\n  }\r\n\r\n  getTeachers() {\r\n    this.http.get('/api/teachers', this.httpOptions).subscribe(result => {\r\n      this.teachers = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  } \r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n    console.log(this.MyForm.value);\r\n    var data = { modalityId: 0, Name: this.MyForm.value.Name, teacherId: this.MyForm.value.TeacherId };\r\n    var jData = JSON.stringify(data);\r\n    this.http.post('api/modalities', jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data Saved')\r\n      this.router.navigate(['/modalities']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html'\r\n})\r\n/** create component*/\r\nexport class ModalityEditComponent {\r\n  /** create ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  teachers: any;\r\n  mainId = 0;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n\r\n  constructor(private http: HttpClient, private router: Router, private toastr: ToastrService, private route: ActivatedRoute, @Inject('BASE_URL') baseUrl: string) {\r\n    route.params.subscribe(params => this.mainId = params['ID']);\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    http.get(baseUrl + 'api/modalities/' + this.mainId, this.httpOptions).subscribe(result => {\r\n      this.MyForm.controls[\"ID\"].setValue(result[\"modalityId\"]);\r\n      this.MyForm.controls[\"Name\"].setValue(result[\"name\"]);\r\n      this.MyForm.controls[\"TeacherId\"].setValue(result[\"teacherId\"]);\r\n    }, error =>\r\n        this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n\r\n    this.getTeachers();\r\n  }\r\n\r\n  getTeachers() {\r\n    this.http.get('/api/teachers', this.httpOptions).subscribe(result => {\r\n      this.teachers = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required]),\r\n      TeacherId: new FormControl(\"\", [Validators.required]),\r\n    });\r\n  }\r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var data = { modalityId: this.mainId, Name: this.MyForm.value.Name, teacherId: this.MyForm.value.TeacherId };\r\n    var jData = JSON.stringify(data);\r\n    this.http.put('api/modalities/' + this.mainId, jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data Saved')\r\n      this.router.navigate(['/modalities']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n    selector: 'app-table',\r\n    templateUrl: './table.component.html',\r\n})\r\n/** table component*/\r\nexport class ModalityTableComponent {\r\n    /** table ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n\r\n  faPlus = faPlus;\r\n  faEdit = faEdit;\r\n  faTrash = faTrash;\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.http.get('/api/modalities', this.httpOptions).subscribe(result => {\r\n      this.data = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  edit(id) {\r\n    window.open('/modalities/' + id);\r\n  }\r\n\r\n  remove(id, name) {\r\n    if (confirm('Are you sure that you want to remove this registry? \\r\\n Name: '+name))\r\n      this.http.delete('/api/modalities/' + id, this.httpOptions).subscribe((data: any[]) => {\r\n        this.toastr.success('Completed')\r\n        this.getData();\r\n      }, error =>\r\n        this.toastr.error('Error Status: ' + error.status)\r\n      );\r\n    else\r\n      this.toastr.warning('Action cancelled')\r\n  }\r\n\r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n.nav-item{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEOztBQUVBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL25hdi1tZW51L25hdi1tZW51LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhLm5hdmJhci1icmFuZCB7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xyXG59XHJcblxyXG5odG1sIHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uYm94LXNoYWRvdyB7XHJcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcclxufVxyXG5cclxuLm5hdi1pdGVte1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  token: any;\r\n  constructor(private router: Router) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem(\"jwt\");\r\n    this.token = null;\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr'; \r\n\r\n@Component({\r\n    selector: 'app-create',\r\n    templateUrl: './create.component.html'\r\n})\r\n/** create component*/\r\nexport class NeighborhoodCreateComponent {\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n    /** create ctor */\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required])\r\n    });\r\n  }\r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var data = { id: 0, name: this.MyForm.value.Name };\r\n    var jData = JSON.stringify(data);\r\n    this.http.post('api/neighborhoods', jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data saved');\r\n      this.router.navigate(['/neighborhoods']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html'\r\n})\r\n/** create component*/\r\nexport class NeighborhoodEditComponent {\r\n  /** create ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  mainId = 0;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n\r\n  constructor(private http: HttpClient, private router: Router, private toastr: ToastrService, private route: ActivatedRoute, @Inject('BASE_URL') baseUrl: string) {\r\n    route.params.subscribe(params => this.mainId = params['ID']);\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    http.get(baseUrl + 'api/neighborhoods/' + this.mainId, this.httpOptions).subscribe(result => {\r\n      this.MyForm.controls[\"ID\"].setValue(result[\"neighborhoodId\"]);\r\n      this.MyForm.controls[\"Name\"].setValue(result[\"name\"]);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required])\r\n    });\r\n  }\r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var data = { neighborhoodId: this.mainId, name: this.MyForm.value.Name };\r\n    var jData = JSON.stringify(data);\r\n    this.http.put('api/neighborhoods/' + this.mainId, jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data Saved');\r\n      this.router.navigate(['/neighborhoods']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n    selector: 'app-table',\r\n    templateUrl: './table.component.html',\r\n})\r\n/** table component*/\r\nexport class NeighborhoodTableComponent {\r\n    /** table ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n\r\n  faPlus = faPlus;\r\n  faEdit = faEdit;\r\n  faTrash = faTrash;\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.http.get('/api/neighborhoods', this.httpOptions).subscribe(result => {\r\n      this.data = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: '+error.status)\r\n    );\r\n  }\r\n\r\n  edit(id) {\r\n    window.open('/neighborhoods/' + id);\r\n  }\r\n\r\n  remove(id, name) {\r\n    if (confirm('Are you sure that you want to remove this registry? \\r\\n Name: ' + name))\r\n      this.http.delete('/api/neighborhoods/' + id, this.httpOptions).subscribe((data: any[]) => {\r\n        this.toastr.success(\"Completed\");\r\n        this.getData();\r\n      }, error =>\r\n        this.toastr.error('Error Status: ' + error.status)\r\n      );\r\n    else\r\n      this.toastr.warning('Action Cancelled!');\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-create',\r\n    templateUrl: './create.component.html'\r\n})\r\n/** create component*/\r\nexport class StudentCreateComponent {\r\n/** create ctor */\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  modalityId: any;\r\n  neighborhoodId: any;\r\n  modalities: any;\r\n  neighborhoods: any;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    this.getModalities();\r\n    this.getNeighborhoods();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required]),\r\n      Surname: new FormControl(\"\", [Validators.required]),\r\n      ModalityId: new FormControl(\"\", [Validators.required]),\r\n      NeighborhoodId: new FormControl(\"\", [Validators.required])\r\n    });\r\n  }\r\n\r\n  getModalities() {\r\n    this.http.get('/api/modalities', this.httpOptions).subscribe(result => {\r\n      this.modalities = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  getNeighborhoods() {\r\n    this.http.get('/api/neighborhoods', this.httpOptions).subscribe(result => {\r\n      this.neighborhoods = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n    console.log(this.MyForm.value);\r\n    var data = { studentId: 0, Name: this.MyForm.value.Name, Surname: this.MyForm.value.Surname, modalityId: this.MyForm.value.ModalityId, neighborhoodId: this.MyForm.value.NeighborhoodId };\r\n    var jData = JSON.stringify(data);\r\n    this.http.post('api/students', jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data Saved');\r\n      this.router.navigate(['/students']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html'\r\n})\r\n/** create component*/\r\nexport class StudentEditComponent {\r\n  /** create ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  modalities: any;\r\n  neighborhoods: any;\r\n  mainId = 0;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, private route: ActivatedRoute, @Inject('BASE_URL') baseUrl: string) {\r\n    route.params.subscribe(params => this.mainId = params['ID']);\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    http.get(baseUrl + 'api/students/' + this.mainId, this.httpOptions).subscribe(result => {\r\n      this.MyForm.controls[\"ID\"].setValue(result[\"modalityId\"]);\r\n      this.MyForm.controls[\"Name\"].setValue(result[\"name\"]);\r\n      this.MyForm.controls[\"Surname\"].setValue(result[\"surname\"]);\r\n      this.MyForm.controls[\"ModalityId\"].setValue(result[\"modalityId\"]);\r\n      this.MyForm.controls[\"NeighborhoodId\"].setValue(result[\"neighborhoodId\"]);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n\r\n    this.getModalities();\r\n    this.getNeighborhoods();\r\n  }\r\n\r\n  getModalities() {\r\n    this.http.get('/api/modalities', this.httpOptions).subscribe(result => {\r\n      this.modalities = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  getNeighborhoods() {\r\n    this.http.get('/api/neighborhoods', this.httpOptions).subscribe(result => {\r\n      this.neighborhoods = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required]),\r\n      Surname: new FormControl(\"\", [Validators.required]),\r\n      ModalityId: new FormControl(\"\", [Validators.required]),\r\n      NeighborhoodId: new FormControl(\"\", [Validators.required])\r\n    });\r\n  }\r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var data = { studentId: this.mainId, Name: this.MyForm.value.Name, Surname: this.MyForm.value.Surname, modalityId: this.MyForm.value.ModalityId, neighborhoodId: this.MyForm.value.NeighborhoodId };\r\n    var jData = JSON.stringify(data);\r\n    this.http.put('api/students/' + this.mainId, jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data Saved');\r\n      this.router.navigate(['/students']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n    selector: 'app-table',\r\n    templateUrl: './table.component.html',\r\n})\r\n/** table component*/\r\nexport class StudentTableComponent {\r\n    /** table ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n\r\n  faPlus = faPlus;\r\n  faEdit = faEdit;\r\n  faTrash = faTrash;\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.http.get('/api/students', this.httpOptions).subscribe(result => {\r\n      this.data = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  edit(id) {\r\n    window.open('/students/' + id);\r\n  }\r\n\r\n  remove(id, name) {\r\n    if (confirm('Are you sure that you want to remove this registry? \\r\\n Name: ' + name))\r\n      this.http.delete('/api/students/' + id, this.httpOptions).subscribe((data: any[]) => {\r\n        this.toastr.success('Completed');\r\n        this.getData();\r\n      }, error =>\r\n        this.toastr.error('Error Status: ' + error.status)\r\n      );\r\n    else\r\n      this.toastr.warning('Action Cancelled');\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-create',\r\n    templateUrl: './create.component.html'\r\n})\r\n/** create component*/\r\nexport class TeacherCreateComponent {\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n  /** create ctor */\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required]),\r\n      Surname: new FormControl(\"\", [Validators.required]),\r\n      PhoneNumber: new FormControl(\"\", [Validators.required])\r\n    });\r\n  } \r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var data = { id: 0, name: this.MyForm.value.Name, surname: this.MyForm.value.Surname, phoneNumber: this.MyForm.value.PhoneNumber };\r\n    var jData = JSON.stringify(data);\r\n    this.http.post('api/teachers', jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data Saved');\r\n      this.router.navigate(['/teachers']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html'\r\n})\r\n/** create component*/\r\nexport class TeacherEditComponent {\r\n  /** create ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  mainId = 0;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, private route: ActivatedRoute, @Inject('BASE_URL') baseUrl: string) {\r\n    route.params.subscribe(params => this.mainId = params['ID']);\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    http.get(baseUrl + 'api/teachers/' + this.mainId, this.httpOptions).subscribe(result => {\r\n      this.MyForm.controls[\"ID\"].setValue(result[\"teacherId\"]);\r\n      this.MyForm.controls[\"Name\"].setValue(result[\"name\"]);\r\n      this.MyForm.controls[\"Surname\"].setValue(result[\"surname\"]);\r\n      this.MyForm.controls[\"PhoneNumber\"].setValue(result[\"phoneNumber\"]);\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required]),\r\n      Surname: new FormControl(\"\", [Validators.required]),\r\n      PhoneNumber: new FormControl(\"\", [Validators.required])\r\n    });\r\n  }\r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var data = { teacherId: this.mainId, name: this.MyForm.value.Name, surname: this.MyForm.value.Surname, phoneNumber: this.MyForm.value.PhoneNumber };\r\n    var jData = JSON.stringify(data);\r\n    this.http.put('api/teachers/' + this.mainId, jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data Saved');\r\n      this.router.navigate(['/teachers']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n    selector: 'app-table',\r\n    templateUrl: './table.component.html',\r\n})\r\n/** table component*/\r\nexport class TeacherTableComponent {\r\n    /** table ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n\r\n  faPlus = faPlus;\r\n  faEdit = faEdit;\r\n  faTrash = faTrash;\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.http.get('/api/teachers', this.httpOptions).subscribe(result => {\r\n      this.data = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  edit(id) {\r\n    window.open('/teachers/' + id);\r\n  }\r\n\r\n  remove(id, name) {\r\n    if (confirm('Are you sure that you want to remove this registry? \\r\\n Name: ' + name))\r\n      this.http.delete('/api/teachers/' + id, this.httpOptions).subscribe((data: any[]) => {\r\n        this.toastr.success('Completed')\r\n        this.getData();\r\n      }, error =>\r\n        this.toastr.error('Error Status: ' + error.status)\r\n      );\r\n    else\r\n      this.toastr.warning('Action Cancelled');\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-create',\r\n    templateUrl: './create.component.html'\r\n})\r\n/** create component*/\r\nexport class UserCreateComponent {\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n  /** create ctor */\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required]),\r\n      Email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n      Password: new FormControl(\"\", [Validators.required])\r\n    });\r\n  } \r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var data = { id: 0, name: this.MyForm.value.Name, email: this.MyForm.value.Email, password: this.MyForm.value.Password };\r\n    var jData = JSON.stringify(data);\r\n    this.http.post('api/users', jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data Saved');\r\n      this.router.navigate(['/users']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html'\r\n})\r\n/** create component*/\r\nexport class UserEditComponent {\r\n  /** create ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n  mainId = 0;\r\n  MyForm: FormGroup;\r\n  submitted = false;\r\n  EventValue: any = \"Save\";\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, private route: ActivatedRoute, @Inject('BASE_URL') baseUrl: string) {\r\n    route.params.subscribe(params => this.mainId = params['ID']);\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    http.get(baseUrl + 'api/users/' + this.mainId, this.httpOptions).subscribe(result => {\r\n      this.MyForm.controls[\"ID\"].setValue(result[\"id\"]);\r\n      this.MyForm.controls[\"Name\"].setValue(result[\"name\"]);\r\n      this.MyForm.controls[\"Email\"].setValue(result[\"email\"]);\r\n      this.MyForm.controls[\"Password\"].setValue(result[\"password\"]);\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.MyForm = new FormGroup({\r\n      ID: new FormControl(null),\r\n      Name: new FormControl(\"\", [Validators.required]),\r\n      Email: new FormControl(\"\", [Validators.required]),\r\n      Password: new FormControl(\"\", [Validators.required])\r\n    });\r\n  }\r\n\r\n  Save() {\r\n    this.submitted = true;\r\n\r\n    if (this.MyForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var data = { id: this.mainId, name: this.MyForm.value.Name, email: this.MyForm.value.Email, password: this.MyForm.value.Password };\r\n    var jData = JSON.stringify(data);\r\n    this.http.put('api/users/' + this.mainId, jData, this.httpOptions).subscribe((data: any[]) => {\r\n      this.toastr.success('Data Saved');\r\n      this.router.navigate(['/users']);\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n    selector: 'app-table',\r\n    templateUrl: './table.component.html',\r\n})\r\n/** table component*/\r\nexport class UserTableComponent {\r\n    /** table ctor */\r\n\r\n  data: any;\r\n  token: any;\r\n  httpOptions: object;\r\n\r\n  faPlus = faPlus;\r\n  faEdit = faEdit;\r\n  faTrash = faTrash;\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.token = localStorage.getItem(\"jwt\");\r\n    if (!this.token)\r\n      this.router.navigate(['/login']);\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.token\r\n      })\r\n    };\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.http.get('/api/users', this.httpOptions).subscribe(result => {\r\n      this.data = result;\r\n    }, error =>\r\n      this.toastr.error('Error Status: ' + error.status)\r\n    );\r\n  }\r\n\r\n  edit(id) {\r\n    window.open('/teachers/' + id);\r\n  }\r\n\r\n  remove(id, name) {\r\n    if (confirm('Are you sure that you want to remove this registry? \\r\\n Name: ' + name))\r\n      this.http.delete('/api/users/' + id, this.httpOptions).subscribe((data: any[]) => {\r\n        this.toastr.success('Completed')\r\n        this.getData();\r\n      }, error =>\r\n        this.toastr.error('Error Status: ' + error.status)\r\n      );\r\n    else\r\n      this.toastr.warning('Action Cancelled');\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}